#!/usr/bin/python
import argparse
import os
import subprocess
import sys

# TODO this thing does not handle errors well at all; libvirt API
# isn't flexible enough to know whether an upload is complete, and
# things are just clumsy.


def parse_args():
    parser = argparse.ArgumentParser(
        description='Create Crowbar deploy node',
        )
    parser.add_argument(
        'uri',
        metavar='URI',
        help='libvirt URI to connect to',
        )
    parser.add_argument(
        'path',
        metavar='PATH',
        help='path to ISO to upload, basename will be used on server',
        )
    args = parser.parse_args()
    return args


def main():
    args = parse_args()

    with file(args.path, 'rb') as iso:
        size = os.fstat(iso.fileno()).st_size
        name = os.path.basename(args.path)
        assert name.endswith('.iso')
        subprocess.check_call(
            args=[
                'virsh',
                '--connect={uri}'.format(uri=args.uri),
                'vol-create-as',
                '--pool=default',
                '--capacity={size}'.format(
                    size=size,
                    ),
                '--format=raw',
                '--name={name}'.format(
                    name=name,
                    ),
                ],
            )

        subprocess.check_call(
            args=[
                'virsh',
                '--connect={uri}'.format(uri=args.uri),
                'vol-upload',
                '--pool=default',
                '--vol={name}'.format(
                    name=name,
                    ),
                '--file=/dev/stdin',
                ],
            stdin=iso,
            )


if __name__ == '__main__':
    sys.exit(main())
